/*
 * Project :      1Equipo-Appsafe-informes y estadisticas
 * Authors :      Alvarez Lopez Carlos Manuel
				  Membrilla Isaias I�aki Ramos
				  Miramón Pérez Jocelyn
 *
 */

 USE [APPSAFE]
 GO

/*
 * 1. Viajes diarios por conductor; datos del conductor, numero de viajes, monto total, este informe debe poder
 * obtener por un periodo de tiempo
*/

CREATE PROCEDURE OBTENER_DATOS_CONDUCTOR
	@FECHA_INICIO DATE,
	@FECHA_FIN DATE
AS
BEGIN

    WITH VIAJES_POR_CONDUCTOR AS (
        SELECT 
            C.ID_USUARIO,
            COUNT(V.ID_VIAJE) AS NUMERO_DE_VIAJES,
            SUM(V.IMPORTE) AS MONTO
        FROM USUARIOS.CONDUCTOR AS C
        JOIN USUARIOS.AUTOMOVIL AS A ON A.ID_USUARIO = C.ID_USUARIO
        JOIN OPERACIONES.VIAJE AS V ON V.ID_AUTOMOVIL = A.ID_AUTOMOVIL
        WHERE V.FECHA_INICIOVIAJE BETWEEN @FECHA_INICIO AND @FECHA_FIN
        GROUP BY C.ID_USUARIO
    )


    SELECT 
        C.ID_USUARIO, 
        C.DESCRIPCION,
        C.LICENCIA,
        C.VIGENCIA AS VIGENCIA_LICENCIA,
        U.NOMBRE_USUARIO,
        U.NOMBRE,
        U.APELLIDO1 AS PATERNO,
        U.APELLIDO2 AS MATERNO,
        U.CORREO,
        VPC.NUMERO_DE_VIAJES,
        VPC.MONTO
    FROM VIAJES_POR_CONDUCTOR AS VPC
    JOIN USUARIOS.CONDUCTOR AS C ON C.ID_USUARIO = VPC.ID_USUARIO
    JOIN USUARIOS.USUARIO AS U ON U.ID_USUARIO = C.ID_USUARIO;
END;
GO
/*
exec OBTENER_DATOS_CONDUCTOR @FECHA_INICIO='2025/05/01', @FECHA_FIN='2025/07/01'
GO
*/

/*
 * 2. Consolidado mensual; día, monto total, monto mensual
*/
CREATE PROCEDURE CONSOLIDADO_MENSUAL
@mes int,
@YEAR INT
AS
BEGIN
select FECHA = CASE CAST(DAY(FECHA_INICIOVIAJE) AS VARCHAR) 
			when '1' THEN '01'
			when '2' THEN '02'
			when '3' THEN '03'
			when '4' THEN '04'
			when '5' THEN '05'
			when '6' THEN '06'
			when '7' THEN '07'
			when '8' THEN '08'
			when '9' THEN '09'
			ELSE CAST(DAY(FECHA_INICIOVIAJE) AS VARCHAR)
			end, SUM(IMPORTE) as TOTAL
from OPERACIONES.VIAJE
where month(FECHA_INICIOVIAJE) = @mes and year(FECHA_INICIOVIAJE)= @YEAR
GROUP BY DAY(FECHA_INICIOVIAJE)
UNION
select fecha = CASE MONTH(FECHA_INICIOVIAJE)
    WHEN 1 THEN 'ENERO'
    WHEN 2 THEN 'FEBRERO'
    WHEN 3 THEN 'MARZO'
    WHEN 4 THEN 'ABRIL'
    WHEN 5 THEN 'MAYO'
    WHEN 6 THEN 'JUNIO'
    WHEN 7 THEN 'JULIO'
    WHEN 8 THEN 'AGOSTO'
    WHEN 9 THEN 'SEPTIEMBRE'
    WHEN 10 THEN 'OCTUBRE'
    WHEN 11 THEN 'NOVIEMBRE'
    WHEN 12 THEN 'DICIEMBRE'
    END ,SUM(IMPORTE) as TOTAL_MES
from OPERACIONES.VIAJE
where month(FECHA_INICIOVIAJE) = @mes and year(FECHA_INICIOVIAJE)= @YEAR
GROUP BY MONTH(FECHA_INICIOVIAJE)
end
go

/*
exec CONSOLIDADO_MENSUAL @mes=6, @year=2025
go
*/

/*
 * 3. Top 5 de conductores por un periodo de tiempo
*/ 

CREATE PROCEDURE OBTENER_TOP_CONDUCTORES
	@FECHA_INICIO DATE,
	@FECHA_FIN DATE
AS
BEGIN
	
	SELECT TOP 5
		C.ID_USUARIO, 
		COUNT(*) AS 'CANTIDAD DE VIAJES'
	FROM USUARIOS.CONDUCTOR AS C
	JOIN USUARIOS.AUTOMOVIL AS A
	ON C.ID_USUARIO=A.ID_USUARIO
	JOIN OPERACIONES.VIAJE AS V
	ON V.ID_AUTOMOVIL=A.ID_AUTOMOVIL
	WHERE V.FECHA_INICIOVIAJE BETWEEN @FECHA_INICIO AND @FECHA_FIN
	GROUP BY C.ID_USUARIO
	ORDER BY COUNT(*) DESC
END;
GO
/*
exec OBTENER_DATOS_CONDUCTOR @FECHA_INICIO='2025/05/01', @FECHA_FIN='2025/06/01'
GO
*/
/*
 * 4. Top 5 de clientes, es decir, los clientes con mayor número de viajes (nombre completo y correo)
*/

CREATE PROCEDURE OBTENER_TOP_CLIENTES
	@FECHA_INICIO DATE,
	@FECHA_FIN DATE
AS
BEGIN
	
	WITH DATOS_CLIENTES AS (
		SELECT
			C.ID_USUARIO,
			COUNT(V.ID_VIAJE) AS NUMERO_DE_VIAJES
		FROM USUARIOS.CLIENTE AS C
		JOIN OPERACIONES.VIAJE AS V
		ON V.ID_USUARIO=C.ID_USUARIO
		WHERE V.FECHA_INICIOVIAJE BETWEEN @FECHA_INICIO AND @FECHA_FIN
		GROUP BY C.ID_USUARIO
	)

	SELECT TOP 5
		DC.ID_USUARIO, 
		DC.NUMERO_DE_VIAJES AS 'NUMERO DE VIAJES',
		U.NOMBRE + ' ' + U.APELLIDO1 + ' ' + ISNULL( ' '+U.APELLIDO2,'') AS 'NOMBRE COMPLETO',
		U.CORREO
	FROM DATOS_CLIENTES AS DC
	JOIN USUARIOS.USUARIO AS U
	ON U.ID_USUARIO=DC.ID_USUARIO
	ORDER BY DC.NUMERO_DE_VIAJES DESC;

END;
GO
/*
exec OBTENER_TOP_CLIENTES @FECHA_INICIO='2025/05/01', @FECHA_FIN='2025/06/01'
GO
*/
/*
 * 5. Listado de conductores con más quejas y motivo (se maneja un catálogo, ejemplo, irrespetuoso, maneja
 * muy rápido, no respeta las reglas de vialidad, etc.)
*/
CREATE PROCEDURE CONDUCTORES_CON_MAS_QUEJAS
AS
BEGIN
	with datos_quejas as(
	SELECT top 3 count(*) as num_quejas, a.ID_AUTOMOVIL FROM OPERACIONES.VIAJE as v
	join INCIDENCIAS.QUEJA as q on v.ID_VIAJE=q.ID_VIAJE
	join USUARIOS.AUTOMOVIL as a on v.ID_AUTOMOVIL=a.ID_AUTOMOVIL
	group by a.ID_AUTOMOVIL)

	select dq.num_quejas, U.NOMBRE + ' ' + U.APELLIDO1 +ISNULL( ' '+U.APELLIDO2,'') AS 'NOMBRE COMPLETO', u.ID_USUARIO as ID_CONDUCTOR,
	cq.MOTIVO as motivo
	from datos_quejas as dq
	join OPERACIONES.VIAJE as v on dq.ID_AUTOMOVIL=v.ID_AUTOMOVIL
	join INCIDENCIAS.QUEJA as q on v.ID_VIAJE=q.ID_VIAJE
	join USUARIOS.AUTOMOVIL as a on v.ID_AUTOMOVIL=a.ID_AUTOMOVIL
	join CATALOGOS.CATALOGO_QUEJAS
	as cq on cq.ID_CATALOGO_QUEJAS=q.ID_CATALOGO_QUEJAS
	join USUARIOS.USUARIO as u on a.ID_USUARIO=u.ID_USUARIO
	order by num_quejas, ID_CONDUCTOR
END;
GO
/*
EXEC CONDUCTORES_CON_MAS_QUEJAS
*/

/*
 * 6. Listado de accidentes; fecha, ubicación, tipo, descripción, heridos si o no, monto gastado, nombre del
 * conductor y auto, si el conductor fue el responsable o no. Con filtros para poder obtener el listado desde un
 * día o un periodo de tiempo.
*/
CREATE PROCEDURE OBTENER_ACCIDENTES
	@FECHA_INICIO DATE,
	@FECHA_FIN DATE
AS
BEGIN
	
	SELECT AC.FECHA,AC.LATITUD,AC.LONGITUD, CA.TIPO,AC.DESCRIPCION,
	HERIDOS=CASE AC.HERIDOS
	WHEN 1 THEN 'EL CONDUCTOR ES RESPONSABLE'
	WHEN 0 THEN 'EL CONDUCTOR NO ES RESPONSABLE'
	END, AC.MONTO,
	U.NOMBRE + ' ' + U.APELLIDO1 +ISNULL( ' '+U.APELLIDO2,'') AS 'NOMBRE CONDUCTOR',
	A.NUMPLACAS,M.NOMBRE_MODELO,
	RESPONSABLE=CASE AC.ES_RESPONSABLE
	WHEN 1 THEN 'EL CONDUCTOR ES RESPONSABLE'
	WHEN 0 THEN 'EL CONDUCTOR NO ES RESPONSABLE'
	END
	FROM INCIDENCIAS.ACCIDENTE AS AC
	JOIN CATALOGOS.CATALOGO_ACCIDENTES AS CA ON  AC.ID_TIPO_ACCIDENTE=CA.ID_TIPO_ACCIDENTE
	JOIN OPERACIONES.VIAJE AS V ON AC.ID_VIAJE = V.ID_VIAJE
	JOIN USUARIOS.AUTOMOVIL AS A ON A.ID_AUTOMOVIL= V.ID_AUTOMOVIL
	JOIN USUARIOS.USUARIO AS U ON U.ID_USUARIO= A.ID_USUARIO
	JOIN CATALOGOS.MODELO AS M ON M.ID_MODELO= A.ID_MODELO
	WHERE V.FECHA_INICIOVIAJE BETWEEN @FECHA_INICIO AND @FECHA_FIN
	
END;
GO
/*
exec OBTENER_ACCIDENTES @FECHA_INICIO='2025/05/01', @FECHA_FIN='2025/06/01'
GO
*/

/*
 * 7. Listado de los clientes con menos estrellas
*/
CREATE PROCEDURE CLIENTES_CON_MENOS_ESTRELLAS
AS
BEGIN
	with datos_clientes_menos_estrellas as(
	SELECT top 3 sum(CALIFICACION_CLIENTE) as CANTIDAD_ESTRELLAS, ID_USUARIO  from OPERACIONES.VIAJE
	GROUP BY ID_USUARIO
	ORDER BY SUM(CALIFICACION_CLIENTE) ASC
	)

	select u.ID_USUARIO, U.NOMBRE + ' ' + U.APELLIDO1 +ISNULL( ' '+U.APELLIDO2,'') AS 'NOMBRE COMPLETO', dcme.CANTIDAD_ESTRELLAS
	from USUARIOS.USUARIO as u
	join datos_clientes_menos_estrellas as dcme on  dcme.ID_USUARIO=u.ID_USUARIO
END;
GO
/*
EXEC CLIENTES_CON_MENOS_ESTRELLAS
*/

/*
 * 8. Listado de los conductores con el total que les han dado por cada estrella
*/
CREATE PROCEDURE ESTRELLAS_CONDUCTORES
AS
BEGIN
	with CANTIDAD_ESTRELLAS_CONDUCTORES as(
	SELECT ID_AUTOMOVIL, COUNT(*) as CANTIDAD_ESTRELLAS, CALIFICACION_CONDUCTOR   from OPERACIONES.VIAJE
	GROUP BY ID_AUTOMOVIL, CALIFICACION_CONDUCTOR
	)

	select u.ID_USUARIO, U.NOMBRE + ' ' + U.APELLIDO1 +ISNULL( ' '+U.APELLIDO2,'') AS 'NOMBRE COMPLETO', CEC.CALIFICACION_CONDUCTOR,cec.CANTIDAD_ESTRELLAS
	from USUARIOS.USUARIO as u
	JOIN USUARIOS.AUTOMOVIL AS a on u.ID_USUARIO=a.ID_USUARIO
	join CANTIDAD_ESTRELLAS_CONDUCTORES as CEC on  CEC.ID_AUTOMOVIL=a.ID_AUTOMOVIL
	order by [NOMBRE COMPLETO]--, CALIFICACION_CONDUCTOR
END;
select  * from USUARIOS.AUTOMOVIL
GO
/*
EXECUTE ESTRELLAS_CONDUCTORES
GO;
*/
/*
EXEC ESTRELLAS_CONDUCTORES
*/
/*
 * 9. Listado de autos, placa, número de serie, marca, modelo, año y color y su dueño
*/
CREATE PROCEDURE LISTADO_DE_AUTOS
as
BEGIN
select a.ID_AUTOMOVIL, a.NUMPLACAS,a.NUMSERIE, ma.NOMBRE_MARCA,mo.NOMBRE_MODELO,a.AÑO,a.COLOR,
U.NOMBRE + ' ' + U.APELLIDO1 +ISNULL( ' '+U.APELLIDO2,'') AS 'DUEÑO'
from USUARIOS.AUTOMOVIL as a
join USUARIOS.USUARIO as u on u.ID_USUARIO=a.ID_USUARIO
join CATALOGOS.MODELO as mo on mo.ID_MODELO=a.id_modelo 
join CATALOGOS.MARCA  as ma on ma.ID_MARCA=mo.ID_MARCA
END;
go
/*
EXEC LISTADO_DE_AUTOS
*/
/*
 * 10. Listado de quejas incluyendo el conductor y auto, con filtro para obtenerse por un periodo de tiempo o por
 * conductor
*/
CREATE PROCEDURE LISTA_DE_QUEJAS
@FechaInicio date,
@FechaFin date,
@IDConductor int
AS
BEGIN
	select U.NOMBRE + ' ' + U.APELLIDO1 +ISNULL( ' '+U.APELLIDO2,'') AS 'NOMBRE COMPLETO', u.ID_USUARIO,
	cq.MOTIVO as motivo, q.DESCRIPCION_QUEJA,q.DESCRIPCION_RESOLUCION,q.FECHA_GENERACION, q.FECHA_RESOLUCION,M.NOMBRE_MODELO, A.NUMPLACAS
	from OPERACIONES.VIAJE AS V
	join INCIDENCIAS.QUEJA as q on v.ID_VIAJE=q.ID_VIAJE
	join USUARIOS.AUTOMOVIL as a on v.ID_AUTOMOVIL=a.ID_AUTOMOVIL
	join CATALOGOS.CATALOGO_QUEJAS as cq on cq.ID_CATALOGO_QUEJAS=q.ID_CATALOGO_QUEJAS
	join USUARIOS.USUARIO as u on a.ID_USUARIO=u.ID_USUARIO
	join CATALOGOS.MODELO as m on a.ID_MODELO=m.ID_MODELO
	  WHERE 
        (@FechaInicio IS NULL OR q.FECHA_GENERACION >= @FechaInicio)
        AND (@FechaFin IS NULL OR q.FECHA_RESOLUCION <= @FechaFin)
        AND (@IDConductor IS NULL OR u.ID_USUARIO = @IDConductor)
END;
GO
/*
exec LISTA_DE_QUEJAS @FechaInicio='2025/05/01' ,@FechaFin = '2025/07/30', @IDConductor = null
*/

